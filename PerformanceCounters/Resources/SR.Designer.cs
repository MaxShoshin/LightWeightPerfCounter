//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightWeight.PerformanceCounters.Resources {
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SR {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }


        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LightWeight.PerformanceCounters.Resources.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        // This method is used to decide if we need to append the exception message parameters to the message when calling SR.Format.
        // by default it returns false.
        // Native code generators can replace the value this returns based on user input at the time of native code generation.
        // Marked as NoInlining because if this is used in an AoT compiled app that is not compiled into a single file, the user
        // could compile each module with a different setting for this. We want to make sure there's a consistent behavior
        // that doesn't depend on which native module this method got inlined into.
        private static bool UsingResourceKeys()
        {
            return false;
        }

        internal static string GetResourceString(string resourceKey, string defaultString)
        {
            if (UsingResourceKeys())
                return defaultString ?? resourceKey;

            string resourceString = null;
            try { resourceString = ResourceManager.GetString(resourceKey); }
            catch (System.Resources.MissingManifestResourceException) { }

            if (defaultString != null && resourceKey.Equals(resourceString, StringComparison.Ordinal))
            {
                return defaultString;
            }

            return resourceString;
        }

        internal static string Format(string resourceFormat, params object[] args)
        {
            if (args != null)
            {
                if (UsingResourceKeys())
                {
                    return resourceFormat + string.Join(", ", args);
                }

                return string.Format(resourceFormat, args);
            }

            return resourceFormat;
        }

        internal static string Format(string resourceFormat, object p1)
        {
            if (UsingResourceKeys())
            {
                return string.Join(", ", resourceFormat, p1);
            }

            return string.Format(resourceFormat, p1);
        }

        internal static string Format(string resourceFormat, object p1, object p2)
        {
            if (UsingResourceKeys())
            {
                return string.Join(", ", resourceFormat, p1, p2);
            }

            return string.Format(resourceFormat, p1, p2);
        }

        internal static string Format(string resourceFormat, object p1, object p2, object p3)
        {
            if (UsingResourceKeys())
            {
                return string.Join(", ", resourceFormat, p1, p2, p3);
            }

            return string.Format(resourceFormat, p1, p2, p3);
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One machine may not have remote administration enabled, or both machines may not be running the remote registry service..
        /// </summary>
        public static string Arg_DllInitFailure {
            get {
                return ResourceManager.GetString("Arg_DllInitFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No remote connection to &apos;{0}&apos; while trying to read the registry..
        /// </summary>
        public static string Arg_RegKeyNoRemoteConnect {
            get {
                return ResourceManager.GetString("Arg_RegKeyNoRemoteConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create or delete the Performance Category &apos;{0}&apos; because access is denied..
        /// </summary>
        public static string CantChangeCategoryRegistration {
            get {
                return ResourceManager.GetString("CantChangeCategoryRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An instance with a lifetime of Global can only be accessed from a PerformanceCounter with the InstanceLifetime set to PerformanceCounterInstanceLifetime.Global..
        /// </summary>
        public static string CantConvertGlobalToProcess {
            get {
                return ResourceManager.GetString("CantConvertGlobalToProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An instance with a lifetime of Process can only be accessed from a PerformanceCounter with the InstanceLifetime set to PerformanceCounterInstanceLifetime.Process..
        /// </summary>
        public static string CantConvertProcessToGlobal {
            get {
                return ResourceManager.GetString("CantConvertProcessToGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create file mapping..
        /// </summary>
        public static string CantCreateFileMapping {
            get {
                return ResourceManager.GetString("CantCreateFileMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot delete Performance Category because this category is not registered or is a system category..
        /// </summary>
        public static string CantDeleteCategory {
            get {
                return ResourceManager.GetString("CantDeleteCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot calculate the size of the file view..
        /// </summary>
        public static string CantGetMappingSize {
            get {
                return ResourceManager.GetString("CantGetMappingSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot map view of file..
        /// </summary>
        public static string CantMapFileView {
            get {
                return ResourceManager.GetString("CantMapFileView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read Category {0}..
        /// </summary>
        public static string CantReadCategory {
            get {
                return ResourceManager.GetString("CantReadCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not Read Category Index: {0}..
        /// </summary>
        public static string CantReadCategoryIndex {
            get {
                return ResourceManager.GetString("CantReadCategoryIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Counter &apos;{0}&apos; does not exist in the specified Category..
        /// </summary>
        public static string CantReadCounter {
            get {
                return ResourceManager.GetString("CantReadCounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance &apos;{0}&apos; does not exist in the specified Category..
        /// </summary>
        public static string CantReadInstance {
            get {
                return ResourceManager.GetString("CantReadInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InstanceLifetime cannot be set after the instance has been initialized.  You must use the default constructor and set the CategoryName, InstanceName, CounterName, InstanceLifetime and ReadOnly properties manually before setting the RawValue..
        /// </summary>
        public static string CantSetLifetimeAfterInitialized {
            get {
                return ResourceManager.GetString("CantSetLifetimeAfterInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load Category Help data because an invalid index &apos;{0}&apos; was read from the registry..
        /// </summary>
        public static string CategoryHelpCorrupt {
            get {
                return ResourceManager.GetString("CategoryHelpCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to initialize because CategoryName is missing..
        /// </summary>
        public static string CategoryNameMissing {
            get {
                return ResourceManager.GetString("CategoryNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category name property has not been set..
        /// </summary>
        public static string CategoryNameNotSet {
            get {
                return ResourceManager.GetString("CategoryNameNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category names must be 1024 characters or less..
        /// </summary>
        public static string CategoryNameTooLong {
            get {
                return ResourceManager.GetString("CategoryNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load Performance Counter data because an unexpected registry key value type was read from &apos;{0}&apos;..
        /// </summary>
        public static string CounterDataCorrupt {
            get {
                return ResourceManager.GetString("CounterDataCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not locate Performance Counter with specified category name &apos;{0}&apos;, counter name &apos;{1}&apos;..
        /// </summary>
        public static string CounterExists {
            get {
                return ResourceManager.GetString("CounterExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Counter layout for the Category specified is invalid, a counter of the type:  AverageCount64, AverageTimer32, CounterMultiTimer, CounterMultiTimerInverse, CounterMultiTimer100Ns, CounterMultiTimer100NsInverse, RawFraction, or SampleFraction has to be immediately followed by any of the base counter types: AverageBase, CounterMultiBase, RawBase or SampleBase..
        /// </summary>
        public static string CounterLayout {
            get {
                return ResourceManager.GetString("CounterLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load Counter Name data because an invalid index &apos;{0}&apos; was read from the registry..
        /// </summary>
        public static string CounterNameCorrupt {
            get {
                return ResourceManager.GetString("CounterNameCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to initialize because CounterName is missing..
        /// </summary>
        public static string CounterNameMissing {
            get {
                return ResourceManager.GetString("CounterNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom counters file view is out of memory..
        /// </summary>
        public static string CountersOOM {
            get {
                return ResourceManager.GetString("CountersOOM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create Performance Category with counter name {0} because the name is a duplicate..
        /// </summary>
        public static string DuplicateCounterName {
            get {
                return ResourceManager.GetString("DuplicateCounterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help Not Available.
        /// </summary>
        public static string HelpNotAvailable {
            get {
                return ResourceManager.GetString("HelpNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance &apos;{0}&apos; already exists with a lifetime of Process.  It cannot be recreated or reused until it has been removed or until the process using it has exited..
        /// </summary>
        public static string InstanceAlreadyExists {
            get {
                return ResourceManager.GetString("InstanceAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single instance categories are only valid with the Global lifetime..
        /// </summary>
        public static string InstanceLifetimeProcessforSingleInstance {
            get {
                return ResourceManager.GetString("InstanceLifetimeProcessforSingleInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InstanceLifetime is unused by ReadOnly counters..
        /// </summary>
        public static string InstanceLifetimeProcessonReadOnly {
            get {
                return ResourceManager.GetString("InstanceLifetimeProcessonReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Counter is single instance, instance name &apos;{0}&apos; is not valid for this counter category..
        /// </summary>
        public static string InstanceNameProhibited {
            get {
                return ResourceManager.GetString("InstanceNameProhibited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Counter is not single instance, an instance name needs to be specified..
        /// </summary>
        public static string InstanceNameRequired {
            get {
                return ResourceManager.GetString("InstanceNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance names used for writing to custom counters must be 127 characters or less..
        /// </summary>
        public static string InstanceNameTooLong {
            get {
                return ResourceManager.GetString("InstanceNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid empty or null string for counter name..
        /// </summary>
        public static string InvalidCounterName {
            get {
                return ResourceManager.GetString("InvalidCounterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value &apos;{1}&apos; for parameter &apos;{0}&apos;..
        /// </summary>
        public static string InvalidParameter {
            get {
                return ResourceManager.GetString("InvalidParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value {1} for property {0}..
        /// </summary>
        public static string InvalidProperty {
            get {
                return ResourceManager.GetString("InvalidProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot continue the current operation, the performance counters memory mapping has been corrupted..
        /// </summary>
        public static string MappingCorrupted {
            get {
                return ResourceManager.GetString("MappingCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MismatchedCounterTypes=Mismatched counter types..
        /// </summary>
        public static string MismatchedCounterTypes {
            get {
                return ResourceManager.GetString("MismatchedCounterTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category does not exist..
        /// </summary>
        public static string MissingCategory {
            get {
                return ResourceManager.GetString("MissingCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category {0} does not exist..
        /// </summary>
        public static string MissingCategoryDetail {
            get {
                return ResourceManager.GetString("MissingCategoryDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Counter {0} does not exist..
        /// </summary>
        public static string MissingCounter {
            get {
                return ResourceManager.GetString("MissingCounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance {0} does not exist in category {1}..
        /// </summary>
        public static string MissingInstance {
            get {
                return ResourceManager.GetString("MissingInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category &apos;{0}&apos; is marked as multi-instance.  Performance counters in this category can only be created with instance names..
        /// </summary>
        public static string MultiInstanceOnly {
            get {
                return ResourceManager.GetString("MultiInstanceOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only objects of type CounterCreationData can be added to a CounterCreationDataCollection..
        /// </summary>
        public static string MustAddCounterCreationData {
            get {
                return ResourceManager.GetString("MustAddCounterCreationData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested Performance Counter is not a custom counter, it has to be initialized as ReadOnly..
        /// </summary>
        public static string NotCustomCounter {
            get {
                return ResourceManager.GetString("NotCustomCounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access a closed category sample..
        /// </summary>
        public static string ObjectDisposed_CategorySampleClosed {
            get {
                return ResourceManager.GetString("ObjectDisposed_CategorySampleClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writeable performance counters are not allowed when running in AppContainer..
        /// </summary>
        public static string PCNotSupportedUnderAppContainer {
            get {
                return ResourceManager.GetString("PCNotSupportedUnderAppContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error calculating the PerformanceCounter value (0x{0})..
        /// </summary>
        public static string PerfCounterPdhError {
            get {
                return ResourceManager.GetString("PerfCounterPdhError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid category name. Its length must be in the range between &apos;{0}&apos; and &apos;{1}&apos;. Double quotes, control characters and leading or trailing spaces are not allowed..
        /// </summary>
        public static string PerfInvalidCategoryName {
            get {
                return ResourceManager.GetString("PerfInvalidCategoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid counter name. Its length must be in the range between &apos;{0}&apos; and &apos;{1}&apos;. Double quotes, control characters and leading or trailing spaces are not allowed..
        /// </summary>
        public static string PerfInvalidCounterName {
            get {
                return ResourceManager.GetString("PerfInvalidCounterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid help string. Its length must be in the range between &apos;{0}&apos; and &apos;{1}&apos;..
        /// </summary>
        public static string PerfInvalidHelp {
            get {
                return ResourceManager.GetString("PerfInvalidHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create Performance Category &apos;{0}&apos; because it already exists..
        /// </summary>
        public static string PerformanceCategoryExists {
            get {
                return ResourceManager.GetString("PerformanceCategoryExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performance Counters are not supported on this platform..
        /// </summary>
        public static string PlatformNotSupported_PerfCounters {
            get {
                return ResourceManager.GetString("PlatformNotSupported_PerfCounters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PerformanceCounterInstanceLifetime.Process is not valid in the global shared memory.  If your performance counter category was created with an older version of the Framework, it uses the global shared memory.  Either use PerformanceCounterInstanceLifetime.Global, or if applications running on older versions of the Framework do not need to write to your category, delete and recreate it..
        /// </summary>
        public static string ProcessLifetimeNotValidInGlobal {
            get {
                return ResourceManager.GetString("ProcessLifetimeNotValidInGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot update Performance Counter, this object has been initialized as ReadOnly..
        /// </summary>
        public static string ReadOnlyCounter {
            get {
                return ResourceManager.GetString("ReadOnlyCounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot remove Performance Counter Instance, this object as been initialized as ReadOnly..
        /// </summary>
        public static string ReadOnlyRemoveInstance {
            get {
                return ResourceManager.GetString("ReadOnlyRemoveInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open registry key {0} on computer {1}..
        /// </summary>
        public static string RegKeyMissingShort {
            get {
                return ResourceManager.GetString("RegKeyMissingShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot write to a Performance Counter in a remote machine..
        /// </summary>
        public static string RemoteWriting {
            get {
                return ResourceManager.GetString("RemoteWriting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot initialize security descriptor initialized..
        /// </summary>
        public static string SetSecurityDescriptionFailed {
            get {
                return ResourceManager.GetString("SetSecurityDescriptionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot initialize security descriptor initialized..
        /// </summary>
        public static string SetSecurityDescriptorFailed {
            get {
                return ResourceManager.GetString("SetSecurityDescriptorFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access shared memory, AppDomain has been unloaded..
        /// </summary>
        public static string SharedMemoryGhosted {
            get {
                return ResourceManager.GetString("SharedMemoryGhosted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category &apos;{0}&apos; is marked as single-instance.  Performance counters in this category can only be created without instance names..
        /// </summary>
        public static string SingleInstanceOnly {
            get {
                return ResourceManager.GetString("SingleInstanceOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to the registry key &apos;{0}&apos; is denied..
        /// </summary>
        public static string UnauthorizedAccess_RegistryKeyGeneric_Key {
            get {
                return ResourceManager.GetString("UnauthorizedAccess_RegistryKeyGeneric_Key", resourceCulture);
            }
        }
    }
}
